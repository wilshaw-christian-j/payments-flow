{"version":3,"sources":["components/Google.js","components/PayPal.js","components/Stripe.js","components/BillingInfo.js","components/App.js","index.js"],"names":["initClient","window","gapi","client","init","then","auth2","getAuthInstance","isSignedIn","listen","updateSignInStatus","get","Google","load","sendDataToGoogle","submissionValues","params","spreadsheetId","range","valueInputOption","insertDataOption","valueRangeBody","sheets","spreadsheets","values","append","response","console","log","result","reason","error","message","PayPal","amount","user","React","useState","paid","setPaid","paypalRef","useRef","data","dataToSend","FirstName","fName","LastName","lName","Email","email","writeData","useEffect","paypal","Buttons","createOrder","actions","order","create","intent","purchase_units","description","currency_code","value","onApprove","a","capture","onError","err","render","current","ref","style","height","width","onToken","token","Stripe","amnt","Number","stripeKey","allowRememberMe","billingAddress","label","locale","panelLabel","currency","zipCode","BillingInfo","setUserState","useForm","mode","register","errors","Form","Group","inline","Field","name","type","placeholder","margin","required","onChange","e","prevState","target","firstName","lastName","App","checkOutType","setCheckOutType","totalPrice","setProductPrice","userState","className","noshade","Checkbox","checked","Radio","onClick","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.64d7cc5a.chunk.js","sourcesContent":["const SPREADSHEET_ID = '1HwOLM0gO6CGa9NXcokUXYimgh0xHfEkODSIA-bGtYDQ';\nconst CLIENT_ID = '272317881517-htdk5sakjvhi81rfr2ohd60cso41m12q.apps.googleusercontent.com'; //from https://console.developers.google.com/apis/credentials\nconst API_KEY = 'AIzaSyAabwz55TZqe2XVVzp37sVFVutvqt0Mgg4'; //https://console.developers.google.com/apis/credentials\nconst SCOPE = 'https://www.googleapis.com/auth/spreadsheets';\n\n\nconst initClient=() => {\n    window.gapi.client.init({\n        'apiKey': API_KEY,\n        'clientId': CLIENT_ID,\n        'scope': SCOPE,\n        'discoveryDocs': ['https://sheets.googleapis.com/$discovery/rest?version=v4'],\n      }).then(()=> {\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSignInStatus); //add a function called `updateSignInStatus` if you want to do something once a user is logged in with Google\n        this.updateSignInStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n      });\n}\nexport default function Google()\n{\n    window.gapi.load('client:auth2', initClient);\n}\nexport const sendDataToGoogle=(submissionValues)=>{\n    const params = {\n        // The ID of the spreadsheet to update.\n        spreadsheetId: SPREADSHEET_ID, \n        // The A1 notation of a range to search for a logical table of data.Values will be appended after the last row of the table.\n        range: 'Sheet1', //this is the default spreadsheet name, so unless you've changed it, or are submitting to multiple sheets, you can leave this\n        // How the input data should be interpreted.\n        valueInputOption: 'RAW', //RAW = if no conversion or formatting of submitted data is needed. Otherwise USER_ENTERED\n        // How the input data should be inserted.\n        insertDataOption: 'INSERT_ROWS', //Choose OVERWRITE OR INSERT_ROWS\n      };\n  \n      const valueRangeBody = {\n        'majorDimension': 'ROWS', //log each entry as a new row (vs column)\n        'values': [submissionValues] //convert the object's values to an array\n      };\n  \n      let request = window.gapi.client.sheets.spreadsheets.values.append(params, valueRangeBody);\n      request.then(function (response) {\n        // TODO: Insert desired response behaviour on submission\n        console.log(response.result);\n      }, function (reason) {\n        console.error('error: ' + reason.result.error.message);\n      });\n}","import React from \"react\";\r\nimport Google,{sendDataToGoogle} from './Google'\r\n\r\nfunction writeData(data){\r\n  Google();\r\n  const dataToSend = { FirstName:data.fName, LastName:data.lName, Email:data.email};\r\n  sendDataToGoogle(dataToSend);\r\n};\r\n\r\nexport default function PayPal({amount,user}) {\r\n  const [paid, setPaid] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n  const paypalRef = React.useRef();\r\n  writeData(user);\r\n  // To show PayPal buttons once the component loads\r\n  React.useEffect(() => {\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions) => {\r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"Your description\",\r\n                amount: {\r\n                  currency_code: \"AUD\",\r\n                  value: amount.amount,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          setPaid(true);\r\n          console.log(order);\r\n        },\r\n        onError: (err) => {\r\n        //   setError(err),\r\n          console.error(err);\r\n        },\r\n      })\r\n      .render(paypalRef.current);\r\n  }, []);\r\n\r\n  // If the payment has been made\r\n  if (paid) {\r\n    return <div>Payment successful.!</div>;\r\n  }\r\n\r\n  // If any error occurs\r\n  if (error) {\r\n    return <div>Error Occurred in processing payment.! Please try again.</div>;\r\n  }\r\n\r\n  // Default Render\r\n  return (\r\n    <div>\r\n      <div ref={paypalRef} style={{ height: '35px',width:'200px' }}/>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Google,{sendDataToGoogle} from './Google'\r\nimport StripeCheckout from 'react-stripe-checkout';\r\n\r\nfunction writeData(data){\r\n  Google();\r\n  const dataToSend = { FirstName:data.fName, LastName:data.lName, Email:data.email};\r\n  sendDataToGoogle(dataToSend);\r\n};\r\n\r\nfunction onToken(token){\r\n \r\n};\r\n\r\nexport default function Stripe({data,user}) {\r\n  writeData(user);\r\n  const amnt = Number(data.amount*100); //do this to get the correct value;\r\n    return (\r\n        <StripeCheckout\r\n        stripeKey=\"pk_test_51HiyibKahUkE99Fs7QDGUUtujWetKGw8ksW3HMjzz6dWGe91LSfYRl0rDyGNruAVD65VRpEBcrBLPSWGTCpxhXMb00yOMU6eh3\"\r\n        token={onToken}\r\n        allowRememberMe={false}\r\n        amount={amnt}\r\n        billingAddress={false}\r\n        description = {\"Card Payment\"}\r\n        label=\"Pay with 💳\"\r\n        locale=\"auto\"\r\n        panelLabel=\"Total Payment\"\r\n        currency=\"AUD\"\r\n         zipCode\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function BillingInfo({ setUserState }){\r\n    const { register, errors } = useForm({ mode: \"onBlur\" });\r\nreturn(\r\n    <Form>\r\n        <Form.Group inline>\r\n            <Form.Field>\r\n            <div>\r\n                <input name=\"firstName\" type='text' placeholder='First name' style={{ height: '35px',width:'200px', margin: '0px 0px 15px 0px'}} ref={register({ required: true })} onChange={(e) => setUserState(prevState=>({...prevState,fName:e.target.value ? e.target.value :\"\"}))}/>\r\n                {errors.firstName && <p>This is required</p>}\r\n            </div>\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <div>\r\n                    <input name=\"lastName\" type='text' placeholder='Last Name' style={{ height: '35px',width:'200px',margin: '0px 0px 15px 0px'}} ref={register({ required: true })} onChange={(e) => setUserState(prevState=>({...prevState,lName:e.target.value ? e.target.value :\"\" }))} />\r\n                    {errors.lastName && <p>This is required</p>}\r\n                </div>\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <div>\r\n                    <input name=\"email\" type='email' placeholder='Email' required style={{ height: '35px',width:'200px',margin: '0px 0px 15px 0px'}}  ref={register({ required: true })} onChange={(e) => setUserState(prevState=>({...prevState,email:e.target.value ? e.target.value :\"\"}))}/>\r\n                    {errors.email && <p>This is required</p>}\r\n                </div>\r\n            </Form.Field>\r\n        </Form.Group>\r\n    </Form>\r\n);\r\n}\r\n","import React from 'react';\nimport PayPal from './PayPal'\nimport Stripe from './Stripe'\nimport BillingInfo from './BillingInfo'\nimport { Form, Radio, Checkbox } from \"semantic-ui-react\";\n\nexport default function App(){\n    const [checkOutType, setCheckOutType] = React.useState(\"PayPal\");\n    const [totalPrice, setProductPrice] = React.useState(0.00);\n    const [userState, setUserState] = React.useState({ fName: \"\", lName: \"\",email:\"\" })\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {\n            <div>\n            <h1>Shopping Cart</h1>\n            <hr noshade />\n            <h2>Billing Info:</h2>\n            <BillingInfo setUserState={setUserState}/>\n            <hr noshade />\n            <h2>Your Order:</h2>\n            <Form.Group inline>\n            <Checkbox  label={\"Uber product $5.00\"} value={5.00}  onChange={(e,data) => {\n               data.checked === true ? setProductPrice(totalPrice+data.value): setProductPrice(totalPrice-data.value);\n            }}/>\n            <Checkbox  label={\"Awesome product $10.00\"} value={10.00}  onChange={(e,data) => {\n               data.checked === true ? setProductPrice(totalPrice+data.value): setProductPrice(totalPrice-data.value);\n            }}/>\n            </Form.Group>\n            <hr noshade />\n            <Form.Group inline>\n                <Radio label=\"PayPal\" checked={checkOutType === \"PayPal\"} value=\"PayPal\" onClick={() => setCheckOutType(\"PayPal\")} />\n                <Radio label=\"CreditCard\" checked={checkOutType === \"CreditCard\"} value=\"CreditCard\" onClick={() => setCheckOutType(\"CreditCard\")} />\n             </Form.Group>\n              <div className=\"payment-div\">\n              <h4>Total Amount in AUD :  ${totalPrice} 😃</h4>\n              {checkOutType === \"PayPal\" && totalPrice > 0 ? <PayPal amount={Number(totalPrice)} user={userState}/> : null}\n              {checkOutType === \"CreditCard\" && totalPrice > 0 ? <Stripe amount={Number(totalPrice)} user={userState}/> : null}\n              </div>\n            </div>\n          }\n        </header>\n      </div>\n    );\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}